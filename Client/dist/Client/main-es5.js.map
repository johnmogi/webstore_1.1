{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/layouts/cart/cart.component.html","webpack:///src/app/components/layouts/cart/cart.component.ts","webpack:///src/app/components/layouts/layout/footer/footer.component.ts","webpack:///src/app/components/layouts/layout/footer/footer.component.html","webpack:///src/app/components/layouts/layout/layout.component.ts","webpack:///src/app/components/layouts/layout/layout.component.html","webpack:///src/app/components/pages/auth/add-item/add-item.component.html","webpack:///src/app/components/pages/auth/add-item/add-item.component.ts","webpack:///src/app/components/pages/auth/admin/admin.component.ts","webpack:///src/app/components/pages/auth/admin/admin.component.html","webpack:///src/app/components/pages/auth/edit-item/edit-item.component.html","webpack:///src/app/components/pages/auth/edit-item/edit-item.component.ts","webpack:///src/app/components/pages/auth/login/login.component.ts","webpack:///src/app/components/pages/auth/login/login.component.html","webpack:///src/app/components/pages/auth/receipt/receipt.component.ts","webpack:///src/app/components/pages/auth/receipt/receipt.component.html","webpack:///src/app/components/pages/auth/register/register.component.html","webpack:///src/app/components/pages/auth/register/register.component.ts","webpack:///src/app/components/pages/checkout/checkout.component.html","webpack:///src/app/components/pages/checkout/checkout.component.ts","webpack:///src/app/components/pages/home/home.component.ts","webpack:///src/app/components/pages/home/home.component.html","webpack:///src/app/components/pages/item/item.component.ts","webpack:///src/app/components/pages/item/item.component.html","webpack:///src/app/components/pages/page-not-found/page-not-found.component.ts","webpack:///src/app/components/pages/page-not-found/page-not-found.component.html","webpack:///src/app/components/pages/pop-up/pop-up.component.html","webpack:///src/app/components/pages/pop-up/pop-up.component.ts","webpack:///src/app/components/pages/shop/shop.component.ts","webpack:///src/app/components/pages/shop/shop.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/models/Auth-model.ts","webpack:///src/app/models/Cart-model.ts","webpack:///src/app/models/Order-model.ts","webpack:///src/app/models/Products-model.ts","webpack:///src/app/redux/action-type.ts","webpack:///src/app/redux/app-state.ts","webpack:///src/app/redux/reducer.ts","webpack:///src/app/redux/store.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/shop.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","onSameUrlNavigation","imports","AppModule","declarations","providers","bootstrap","CartComponent","userService","cartService","router","user","userCart","userCartItems","cartLoad","cartBox","totalPrice","subscribe","getState","isAdmin","fetchCart","userID","window","location","reload","removeItemFromCart","cartID","res","console","log","cart","sum","i","length","findCart","alert","fetchCartItems","err","message","fetchItems","sumTotalPrice","opacity","optional","selector","templateUrl","styles","animations","FooterComponent","currentYear","Date","getFullYear","LayoutComponent","itemService","orderService","cartData","products","cartHolder","orders","userOrder","cartLoop","visitCounter","size","fetchOrder","firstName","firstVisit","getAllProducts","action","type","getProducts","payload","dispatch","getAllorders","getOrders","userLogout","localStorage","removeItem","navigateByUrl","cartDate","cartTime","resize","getCartItems","getOneUserOrderAsync","styleUrls","AddItemComponent","http","shopService","adminService","uploadedFile","product","formValid","cats","srcResult","addItItemForm","itemName","price","imageUrl","itemDescription","catID","getAllcats","event","target","files","itemForm","FormData","append","JSON","stringify","addItem","validateForm","AdminComponent","EditItemComponent","myActivatedRoute","name","editItemForm","productID","snapshot","params","getOneProductAsync","info","editItem","LoginComponent","authService","upUser","loginForm","ErrorMessage","valid","token","liveUser","userLogin","username_email","password","loginUser","setItem","jwtToken","checkForCart","makeNewCart","makeCart","login","ReceiptComponent","RegisterComponent","addUser","lastName","street","city","confPass","validated0","validated1","errorBox","errorMessages","idTaken","email","emailTaken","passwords","cities","checkValid","checkUser","regUser","liveForm","liveLogin","CheckoutComponent","calendar","order","occupiedDates","orderForm","searchTerm","dateClass","d","date","getDate","newDate","toLocaleString","map","cartItems","fetchAllOrder","p","document","getElementById","tmpArr","paymentDigits","shippingDate","shippingCity","year","month","getMonth","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","shipTime","clientID","subTotal","addOrder","push","search","completeOrder","HomeComponent","ItemComponent","newCart","amount","cartId","addItemToCart","addItemCart","addToCart","PageNotFoundComponent","PopUpComponent","getCart","ShopComponent","dialog","activeProducts","term","catid","selected","filter","unFilterItems","MaterialModule","AuthModel","RegAuthModel","conf_password","CartModel","OrderModel","orderId","shippingStreet","orderTime","ProductModel","ActionType","AppState","reducer","oldAppState","newAppState","getUser","getCats","store","port","AdminService","api","patch","productForm","post","providedIn","AuthService","auth","sendInfo","get","headers","Authorization","getItem","CartService","num","OrderService","form","ShopService","toPromise","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/pages/home/home.component';\r\nimport { ShopComponent } from './components/pages/shop/shop.component';\r\nimport { RegisterComponent } from './components/pages/auth/register/register.component';\r\nimport { AdminComponent } from './components/pages/auth/admin/admin.component';\r\nimport { ItemComponent } from './components/pages/item/item.component';\r\nimport { CheckoutComponent } from './components/pages/checkout/checkout.component';\r\nimport { EditItemComponent } from './components/pages/auth/edit-item/edit-item.component';\r\nimport { AddItemComponent } from './components/pages/auth/add-item/add-item.component';\r\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'shop',\r\n    component: ShopComponent,\r\n  },\r\n  {\r\n    path: 'shop/item/:id',\r\n    component: ItemComponent,\r\n  },\r\n\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: AdminComponent,\r\n  },\r\n  {\r\n    path: 'checkout',\r\n    component: CheckoutComponent,\r\n  },\r\n\r\n  {\r\n    path: 'dashboard/edit/:id',\r\n    component: EditItemComponent,\r\n  },\r\n  {\r\n    path: 'dashboard/add-item',\r\n    component: AddItemComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LayoutComponent } from './components/layouts/layout/layout.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FooterComponent } from './components/layouts/layout/footer/footer.component';\r\nimport { HomeComponent } from './components/pages/home/home.component';\r\nimport { ShopComponent } from './components/pages/shop/shop.component';\r\nimport { AdminComponent } from './components/pages/auth/admin/admin.component';\r\nimport { LoginComponent } from './components/pages/auth/login/login.component';\r\nimport { CartComponent } from './components/layouts/cart/cart.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ItemComponent } from './components/pages/item/item.component';\r\nimport { CheckoutComponent } from './components/pages/checkout/checkout.component';\r\nimport { RegisterComponent } from './components/pages/auth/register/register.component';\r\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\r\nimport { EditItemComponent } from './components/pages/auth/edit-item/edit-item.component';\r\nimport { AddItemComponent } from './components/pages/auth/add-item/add-item.component';\r\nimport { PopUpComponent } from './components/pages/pop-up/pop-up.component';\r\nimport { ReceiptComponent } from './components/pages/auth/receipt/receipt.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    ShopComponent,\r\n    AdminComponent,\r\n    LoginComponent,\r\n    CartComponent,\r\n    ItemComponent,\r\n    CheckoutComponent,\r\n    RegisterComponent,\r\n    PageNotFoundComponent,\r\n    EditItemComponent,\r\n    AddItemComponent,\r\n    PopUpComponent,\r\n    ReceiptComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [LayoutComponent],\r\n})\r\nexport class AppModule {}\r\n","<mat-card>\r\n  <h4 *ngIf=\"cartBox\">{{ cartBox }}</h4>\r\n  <table *ngIf=\"userCartItems\">\r\n    <thead>\r\n      <td>name</td>\r\n      <td>quantity</td>\r\n      <td>total</td>\r\n      <td></td>\r\n    </thead>\r\n    <tbody [@listAnimation]=\"userCartItems.length\">\r\n      <tr *ngFor=\"let c of userCartItems\">\r\n        <td>{{ c.itemName }}</td>\r\n        <td>{{ c.amount }}</td>\r\n        <td>{{ c.totalPrice }}</td>\r\n        <td>\r\n          <a (click)=\"removeItem(c.productID)\" style=\"cursor: pointer;\">[X]</a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <section class=\"bottom-cart row\">\r\n    <h5 class=\"col\">SubTotal : {{ totalPrice }}</h5>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      class=\"col\"\r\n      type=\"button\"\r\n      routerLink=\"checkout\"\r\n    >\r\n      Checkout\r\n    </button>\r\n  </section>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { store } from 'src/app/redux/store';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport {\r\n  trigger,\r\n  style,\r\n  query,\r\n  stagger,\r\n  animate,\r\n  transition,\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styles: [],\r\n  animations: [\r\n    trigger('listAnimation', [\r\n      transition('* => *', [\r\n        query(\r\n          ':enter',\r\n          [\r\n            style({ opacity: 0 }),\r\n            stagger(100, [animate('0.5s', style({ opacity: 1 }))]),\r\n          ],\r\n          { optional: true }\r\n        ),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CartComponent implements OnInit {\r\n  public user = new AuthModel();\r\n  public userCart = [];\r\n  public userCartItems = [];\r\n\r\n  public cartLoad = false;\r\n  public cartBox = '';\r\n  public totalPrice = 0;\r\n\r\n  constructor(\r\n    private userService: AuthService,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    store.subscribe(() => {\r\n      // call cart and items:\r\n      this.user = store.getState().user; // * -user ready - get active cart:\r\n      if (this.user && !this.user.isAdmin && !this.cartLoad) {\r\n        this.fetchCart(this.user.userID);\r\n      }\r\n    });\r\n  }\r\n\r\n  public removeItem(id) {\r\n    window.location.reload();\r\n    this.cartService\r\n      .removeItemFromCart(id, this.userCart[0].cartID)\r\n      .subscribe((res) => console.log(res));\r\n  }\r\n\r\n  public sumTotalPrice(cart) {\r\n    let sum = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      sum += cart[i].totalPrice;\r\n    }\r\n    this.totalPrice = sum;\r\n  }\r\n  public async fetchCart(id) {\r\n    this.cartLoad = true;\r\n\r\n    await this.cartService.findCart(id).subscribe(\r\n      (res) => {\r\n        this.userCart[0] = res[0];\r\n        if (!res[0].cartID) {\r\n          alert(\r\n            'sorry for the inconvinience, late bug found- please refresh the page- it will surely fix it.'\r\n          );\r\n        }\r\n        this.fetchCartItems(res[0].cartID);\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n  public async fetchCartItems(id) {\r\n    await this.cartService.fetchItems(id).subscribe(\r\n      (res) => {\r\n        this.userCartItems = res;\r\n        this.sumTotalPrice(res);\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class FooterComponent  {\r\npublic currentYear = new Date().getFullYear();\r\n\r\n}\r\n","<p class=\"text-center\">All rights reserved, JohnMogi {{currentYear}}</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { CartModel } from 'src/app/models/Cart-model';\r\nimport { OrderModel } from 'src/app/models/Order-model';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Router } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { store } from 'src/app/redux/store';\r\nimport { ActionType } from 'src/app/redux/action-type';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.css'],\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  // import everything to homepage from api to redux for further use:\r\n  public cartData = 0;\r\n  public products: ProductModel[] = [];\r\n  public cartHolder: CartModel[] = [];\r\n  public orders: OrderModel[] = [];\r\n  public userOrder = [];\r\n  public userCart = [];\r\n  public userCartItems = [];\r\n  public cartDate: String;\r\n  public cartPrice: Number;\r\n  public cartLoop: Boolean = false;\r\n  public user = new AuthModel();\r\n  public firstName: String;\r\n  public firstVisit: Number;\r\n  public visitCounter: Boolean = false;\r\n  public isAdmin: Boolean = false;\r\n  public totalPrice = 0;\r\n  public size: Boolean = false;\r\n\r\n  constructor(\r\n    private itemService: ShopService,\r\n    private cartService: CartService,\r\n    private orderService: OrderService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    store.subscribe(() => {\r\n      this.products = store.getState().products;\r\n      this.user = store.getState().user; // * -user ready - get cart:\r\n      if (this.user && this.user.isAdmin) {\r\n        this.isAdmin = true;\r\n      }\r\n      if (this.user && !this.user.isAdmin) {\r\n        this.isAdmin = false;\r\n\r\n        if (!this.userOrder) {\r\n          this.fetchOrder(this.user.userID);\r\n        }\r\n        if (!this.userCart) {\r\n          this.fetchCart(this.user.userID);\r\n        }\r\n        this.firstName = this.user.firstName;\r\n        this.firstVisit = +this.user.firstVisit;\r\n        this.visitCounter = true;\r\n      }\r\n    });\r\n    // store\r\n    // * fetch products load into store\r\n    this.itemService.getAllProducts().subscribe(\r\n      (res) => {\r\n        const action = {\r\n          type: ActionType.getProducts,\r\n          payload: res,\r\n        };\r\n        store.dispatch(action);\r\n        this.products = res;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n\r\n    // * fetch Orders load into store\r\n    this.orderService.getAllorders().subscribe(\r\n      (res) => {\r\n        const action = {\r\n          type: ActionType.getOrders,\r\n          payload: res,\r\n        };\r\n        store.dispatch(action);\r\n        this.orders = res;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n\r\n    this.products = store.getState().products;\r\n    this.orders = store.getState().orders;\r\n  } // ngonint\r\n\r\n  public resize() {\r\n    this.size = !this.size;\r\n  }\r\n  public logout(): void {\r\n    const action = {\r\n      type: ActionType.userLogout,\r\n      payload: null,\r\n    };\r\n    store.dispatch(action);\r\n    localStorage.removeItem('token');\r\n    this.userCart = [];\r\n    this.router.navigateByUrl('/');\r\n  }\r\n  public fetchCart(id) {\r\n    this.cartService.findCart(id).subscribe(\r\n      (res) => {\r\n        this.userCart[0] = res[0];\r\n        this.cartDate = this.userCart[0].cartTime;\r\n        this.fetchCartItems(res[0].cartID);\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n\r\n  // * fetch user cart load into store\r\n  public fetchCartItems(id) {\r\n    this.cartService.fetchItems(id).subscribe(\r\n      (res) => {\r\n        if (this.resize.length > 0) {\r\n          this.totalPrice = +res[0].totalPrice;\r\n        }\r\n        if (!this.cartLoop) {\r\n          this.cartLoop = !this.cartLoop;\r\n          const action = {\r\n            type: ActionType.getCartItems,\r\n            payload: res,\r\n          };\r\n          store.dispatch(action);\r\n        }\r\n        this.userCartItems = res;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n  public fetchOrder(userID) {\r\n    this.orderService.getOneUserOrderAsync(userID).subscribe(\r\n      (res) => {\r\n        this.userOrder[0] = res[-1]; //setting to last order\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n  <mat-toolbar-row>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"sidenav.toggle()\"\r\n      fxShow=\"true\"\r\n      fxHide.gt-sm\r\n    >\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <a routerLink=\"/\">\r\n      <span color=\"accent\">\r\n        <i class=\"material-icons logo\">storefront </i> Web Store</span\r\n      >\r\n    </a>\r\n    <span class=\"menu-spacer\"></span>\r\n    <div fxShow=\"true\" fxHide.lt-md class=\"hidden-sm-down topMenu\">\r\n      <!-- The following menu items will be hidden on both SM and XS screen sizes -->\r\n      <a routerLink=\"home\" mat-button>Home</a>\r\n      <a routerLink=\"shop\" mat-button *ngIf=\"user\">Shop</a>\r\n      <a routerLink=\"register\" mat-button *ngIf=\"!user\">Register</a>\r\n      <a routerLink=\"dashboard\" mat-button *ngIf=\"isAdmin\">Admin</a>\r\n      <a routerLink=\"checkout\" mat-button *ngIf=\"user\">Checkout</a>\r\n    </div>\r\n    <span class=\"spacer\"></span>\r\n    <li class=\"col\">\r\n      <i class=\"material-icons\">account_circle</i>\r\n      {{ user ? user.firstName : \" Guest\" }}\r\n    </li>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-toolbar>\r\n  <button\r\n    type=\"button\"\r\n    *ngIf=\"user\"\r\n    color=\"primary\"\r\n    id=\"layoutButton\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"logout()\"\r\n  >\r\n    Logout\r\n  </button>\r\n\r\n  <button\r\n    type=\"button\"\r\n    *ngIf=\"user\"\r\n    mat-raised-button\r\n    color=\"accent\"\r\n    routerLink=\"shop\"\r\n  >\r\n    <i class=\"material-icons\">shop</i> {{ user ? \"Resume\" : \"Start\" }} Shopping\r\n  </button>\r\n\r\n  <button\r\n    type=\"button\"\r\n    id=\"layoutButton\"\r\n    mat-raised-button\r\n    color=\"basic\"\r\n    (click)=\"resize()\"\r\n  >\r\n    <i class=\"material-icons\">compare_arrows</i>\r\n  </button>\r\n  <span class=\"spacer\"></span>\r\n  <span class=\"spacer\"></span>\r\n  <h6 class=\"col smallr\">\r\n    <span>\r\n      <i class=\"material-icons\">mail_outline</i\r\n      ><a href=\"mailto:info@kodo.press\">info@kodo.press</a>\r\n      <i class=\"material-icons\">call</i>\r\n      <a href=\"tel:050-9382456\">050-9382456</a>\r\n    </span>\r\n  </h6>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav>\r\n    <mat-nav-list>\r\n      <a routerLink=\"home\" mat-list-item>Home</a>\r\n      <a routerLink=\"shop\" mat-list-item>Shop</a>\r\n      <a routerLink=\"register\" mat-list-item>Register</a>\r\n      <a routerLink=\"dashboard\" mat-list-item *ngIf=\"isAdmin\">Admin</a>\r\n      <a routerLink=\"order\" mat-list-item>Checkout</a>\r\n      <a (click)=\"sidenav.toggle()\" mat-list-item\r\n        ><i class=\"material-icons\">close</i></a\r\n      >\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <br />\r\n    <div class=\"row\">\r\n      <!--Sidebar-1-->\r\n      <div class=\"card col-2 grey\" *ngIf=\"size\">\r\n        <app-login *ngIf=\"!user\"></app-login>\r\n        <app-cart *ngIf=\"user\"></app-cart>\r\n      </div>\r\n      <div class=\"card col-3 grey\" color=\"accent\" *ngIf=\"!size\">\r\n        <app-login *ngIf=\"!user\"></app-login>\r\n        <app-cart *ngIf=\"user\"></app-cart>\r\n      </div>\r\n      <!--Sidebar-1-->\r\n      <div class=\"col jumbotron\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <!--Sidebar-2-->\r\n      <div class=\"card col-1 grey\" *ngIf=\"user\">\r\n        <mat-chip-list class=\"mat-chip-list-stacked\">\r\n          <mat-chip color=\"basic\" selected>\r\n            <span\r\n              matBadge=\"{{ products.length }}\"\r\n              matBadgeColor=\"accent\"\r\n              matBadgeOverlap=\"false\"\r\n            >\r\n              Web-Store Products</span\r\n            >\r\n          </mat-chip>\r\n          <mat-chip color=\"accent\" selected>\r\n            <span\r\n              matBadge=\"{{ orders.length }}\"\r\n              matBadgeColor=\"basic\"\r\n              matBadgeOverlap=\"false\"\r\n            >\r\n              Web-Store Orders</span\r\n            >\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n        <br />\r\n        <div class=\"card message message3\" *ngIf=\"firstVisit < 1\">\r\n          <!-- new user - [firstVisit] = 0/1 ~ check -->\r\n          <h4>Wellcome to Web Store!</h4>\r\n          <p>\r\n            Since this is your <br />\r\n            <b>first visit </b> we'll grant you a bonus upon your first\r\n            purchase.\r\n          </p>\r\n        </div>\r\n        <div class=\"card message message1\" *ngIf=\"userOrder.length > 0\">\r\n          <!--  if user has an open cart with at least one item. -->\r\n          <br />\r\n          <p>\r\n            you left an open cart from: <br />\r\n            {{ cartDate }}\r\n          </p>\r\n          <br />\r\n          SubTotal: {{ totalPrice }} $\r\n        </div>\r\n        <div class=\"card message message2\" *ngIf=\"userOrder.length < 1\">\r\n          <!--  if user has an empty cart and made an order - display order -->\r\n          <br />\r\n          <p *ngIf=\"userOrder\">\r\n            <!-- Your last order: {{userOrder}} <br />\r\n            order item name <br /> -->\r\n            \r\n            see something you like?\r\n          </p>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"user\"\r\n          mat-raised-button\r\n          color=\"accent\"\r\n          routerLink=\"shop\"\r\n        >\r\n          <i class=\"material-icons\">shop</i>\r\n          {{ user ? \"Resume\" : \"Start\" }} Shopping\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!--Sidebar-2-->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<app-footer></app-footer>\r\n","<h1>\r\n  add item :\r\n</h1>\r\n\r\n<form>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Choose category:</mat-label>\r\n    <mat-select\r\n      name=\"catID\"\r\n      #catIDIn=\"ngModel\"\r\n      [(ngModel)]=\"addItItemForm.catID\"\r\n    >\r\n      <mat-option *ngFor=\"let c of cats\" value=\"{{ c.catID }}\">\r\n        {{ c.catName }}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"catIDIn.touched && catIDIn.invalid\"\r\n      >must include category\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <br />\r\n  <mat-form-field>\r\n    <mat-label>Item Name:</mat-label>\r\n    <input\r\n      matInput\r\n      name=\"itemName\"\r\n      #nameIn=\"ngModel\"\r\n      minlength=\"1\"\r\n      [(ngModel)]=\"addItItemForm.itemName\"\r\n      placeholder=\"item name\"\r\n      required\r\n    />\r\n    <mat-error *ngIf=\"nameIn.touched && nameIn.invalid\"\r\n      >must include item name\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <br />\r\n  <br />\r\n  <mat-form-field>\r\n    <mat-label>Item Price:</mat-label>\r\n    <input\r\n      matInput\r\n      type=\"number\"\r\n      name=\"price\"\r\n      #priceIn=\"ngModel\"\r\n      min=\"1\"\r\n      [(ngModel)]=\"addItItemForm.price\"\r\n      placeholder=\"item price\"\r\n      required\r\n    />\r\n    <mat-error *ngIf=\"priceIn.touched && priceIn.invalid\"\r\n      >must include item price\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <br />\r\n  <mat-form-field>\r\n    <mat-label>Item Description:</mat-label>\r\n    <textarea\r\n      matInput\r\n      name=\"itemDescription\"\r\n      #descIn=\"ngModel\"\r\n      minlength=\"1\"\r\n      [(ngModel)]=\"addItItemForm.itemDescription\"\r\n      placeholder=\"item price\"\r\n      required\r\n    ></textarea>\r\n    <mat-error *ngIf=\"descIn.touched && descIn.invalid\"\r\n      >must include item Description\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <br />\r\n  <button mat-raised-button color=\"accent\" (click)=\"addItem()\">\r\n    <mat-icon>file_upload</mat-icon> Add Item\r\n  </button>\r\n</form>\r\n","import { Router } from '@angular/router';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { store } from 'src/app/redux/store';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\n\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styles: [],\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n  public user = new AuthModel(); // kick out un-logged users\r\n\r\n  public uploadedFile: File = null;\r\n  public products: ProductModel[];\r\n  public product: ProductModel = new ProductModel();\r\n  public formValid: Boolean = false;\r\n  public cats = [];\r\n  public srcResult = '';\r\n  public addItItemForm = {\r\n    itemName: '',\r\n    price: 1,\r\n    imageUrl: '',\r\n    itemDescription: '',\r\n    catID: 0,\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private shopService: ShopService,\r\n    private adminService: AdminService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.shopService.getAllcats().subscribe(\r\n        (res) => {\r\n          this.cats = res;\r\n        },\r\n        (err) => alert(err.message)\r\n      );\r\n      console.log(this.cats);\r\n      // * Fetch this item details:\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n\r\n    this.user = store.getState().user;\r\n    if (this.user === null || !this.user.isAdmin) {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n  public validateForm() {\r\n    if (\r\n      !this.addItItemForm.itemName ||\r\n      !this.addItItemForm.catID ||\r\n      !this.addItItemForm.itemDescription ||\r\n      !this.addItItemForm.price\r\n    ) {\r\n      alert('one of the fields is missing, check and try again');\r\n      return;\r\n    }\r\n    if (this.addItItemForm.price < 1) {\r\n      alert(\"Item price must be positive, wer'e here to profit...\");\r\n      return;\r\n    } else {\r\n      this.formValid = true;\r\n    }\r\n  }\r\n  public loadImage(event: any): void {\r\n    this.uploadedFile = <File>event.target.files[0];\r\n  }\r\n\r\n  public uploadImage(): void {\r\n    const itemForm: FormData = new FormData();\r\n    itemForm.append('imageUrl', JSON.stringify(this.uploadedFile));\r\n\r\n    console.log(itemForm);\r\n    this.adminService.addItem(this.addItItemForm).subscribe(\r\n      () => {\r\n        alert('you have added an item...');\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n  public addItem() {\r\n    this.validateForm();\r\n    if (!this.formValid) {\r\n      return;\r\n    }\r\n    // unable to send files atm\r\n    this.adminService.addItem(this.addItItemForm).subscribe(\r\n      (res) => {\r\n        alert('you have added an item...');\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { store } from 'src/app/redux/store';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.css'],\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  public products: ProductModel[] = [];\r\n  public user = new AuthModel(); // kick out un-logged users\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    store.subscribe(() => {\r\n      this.products = store.getState().products;\r\n    });\r\n    this.products = store.getState().products;\r\n\r\n    this.user = store.getState().user;\r\n    if (this.user === null || !this.user.isAdmin) {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n}\r\n","<button routerLink=\"/dashboard/add-item\" mat-raised-button color=\"accent\">\r\n  Add New Item\r\n</button>\r\n\r\n<table class=\"mat-elevation-z8 admintable\">\r\n  <thead>\r\n    <tr>\r\n      <td>Edit</td>\r\n      <td>itemName</td>\r\n      <td>itemDescription</td>\r\n      <td>price</td>\r\n      <td>category</td>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let p of products\">\r\n      <td>\r\n        <a routerLink=\"edit/{{ p.productID }}\" alt=\"edit this item\"\r\n          ><i class=\"material-icons\">edit</i></a\r\n        >\r\n      </td>\r\n      <td id=\"tdname\">{{ p.itemName }}</td>\r\n      <td>{{ p.itemDescription }}</td>\r\n      <td>{{ p.price }}</td>\r\n      <td>{{ p.catID }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","<div class=\"card mat-elevation-z8\">\r\n  <h1>edit this item:</h1>\r\n  <form>\r\n    <mat-form-field>\r\n      <mat-label>Edit Item Name:</mat-label>\r\n      <input\r\n        matInput\r\n        name=\"itemName\"\r\n        #nameIn=\"ngModel\"\r\n        value=\"{{ name }}\"\r\n        minlength=\"1\"\r\n        [(ngModel)]=\"editItemForm.itemName\"\r\n        placeholder=\"item name\"\r\n        required\r\n      />\r\n      <mat-error *ngIf=\"nameIn.touched && nameIn.invalid\"\r\n        >must include item name\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <br />\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Choose category:</mat-label>\r\n      <mat-select\r\n        name=\"catID\"\r\n        #catIDIn=\"ngModel\"\r\n        [(ngModel)]=\"editItemForm.catID\"\r\n      >\r\n        <mat-option *ngFor=\"let c of cats\" value=\"{{ c.catID }}\">\r\n          {{ c.catName }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"catIDIn.touched && catIDIn.invalid\"\r\n        >must include category\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <br />\r\n    <mat-form-field>\r\n      <mat-label>Edit Item Price:</mat-label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"1\"\r\n        matInput\r\n        name=\"price\"\r\n        #priceIn=\"ngModel\"\r\n        value=\"{{ price }}\"\r\n        minlength=\"1\"\r\n        [(ngModel)]=\"editItemForm.price\"\r\n        placeholder=\"item price\"\r\n        required\r\n      />\r\n      <mat-error *ngIf=\"priceIn && priceIn.invalid\">\r\n        must include item price\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <br />\r\n    <mat-form-field>\r\n      <mat-label>Edit Item itemDescription:</mat-label>\r\n      <textarea\r\n        min=\"1\"\r\n        matInput\r\n        name=\"itemDescription\"\r\n        #descIn=\"ngModel\"\r\n        value=\"{{ itemDescription }}\"\r\n        minlength=\"1\"\r\n        [(ngModel)]=\"editItemForm.itemDescription\"\r\n        placeholder=\"item Description\"\r\n        required\r\n      ></textarea>\r\n      <mat-error *ngIf=\"descIn && descIn.invalid\">\r\n        must include item Description\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <br />\r\n    <button\r\n      type=\"submit\"\r\n      mat-raised-button\r\n      type=\"button\"\r\n      color=\"primary\"\r\n      class=\"col\"\r\n      value=\"Add\"\r\n      (click)=\"editItem(productID)\"\r\n    >\r\n      <i class=\"material-icons\">create</i> Submit Changes\r\n    </button>\r\n    <br />\r\n    <a mat-raised-button routerLink=\"/dashboard\">\r\n      <i class=\"material-icons\">keyboard_backspace</i> Back to Dashboard\r\n    </a>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { store } from 'src/app/redux/store';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\n\r\n@Component({\r\n  selector: 'app-edit-item',\r\n  templateUrl: './edit-item.component.html',\r\n  styles: [],\r\n})\r\nexport class EditItemComponent implements OnInit {\r\n  public user = new AuthModel(); // kick out un-logged users\r\n  public product: ProductModel = new ProductModel();\r\n  public productID?: number;\r\n  public name: string = '';\r\n  public price = 0;\r\n  public imageUrl: string = '';\r\n  public itemDescription: string = '';\r\n  public cats = [];\r\n  public catID: string = '';\r\n  public editItemForm = {\r\n    productID: 0,\r\n    itemName: '',\r\n    price: 0,\r\n    imageUrl: '',\r\n    itemDescription: '',\r\n    catID: 0,\r\n  };\r\n\r\n  constructor(\r\n    private myActivatedRoute: ActivatedRoute,\r\n    private shopService: ShopService,\r\n    private adminService: AdminService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      const id = +this.myActivatedRoute.snapshot.params.id;\r\n      store.subscribe(() => {});\r\n      // * Fetch this item details:\r\n      this.product = await this.shopService.getOneProductAsync(id);\r\n      this.productID = this.product[0].productID;\r\n      this.name = this.product[0].itemName;\r\n      this.price = +this.product[0].price;\r\n      this.imageUrl = this.product[0].imageUrl;\r\n      this.itemDescription = this.product[0].itemDescription;\r\n      this.catID = this.product[0].catID;\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n    this.shopService.getAllcats().subscribe(\r\n      (res) => {\r\n        this.cats = res;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n    this.user = store.getState().user;\r\n    if (this.user === null || !this.user.isAdmin) {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n  catch(err) {\r\n    alert(err.message);\r\n  }\r\n\r\n  public editItem(id) {\r\n    if (!this.editItemForm.itemName) {\r\n      this.editItemForm.itemName = this.name;\r\n    }\r\n    if (!this.editItemForm.itemDescription) {\r\n      this.editItemForm.itemDescription = this.itemDescription;\r\n    }\r\n    if (!this.editItemForm.price) {\r\n      this.editItemForm.price = +this.price;\r\n    }\r\n    if (!this.editItemForm.imageUrl) {\r\n      this.editItemForm.imageUrl = this.imageUrl;\r\n    }\r\n\r\n    this.editItemForm.catID = +this.catID;\r\n    this.editItemForm.productID = +this.productID;\r\n\r\n    console.info('id :' + JSON.stringify(this.editItemForm));\r\n\r\n    this.adminService.editItem(this.editItemForm).subscribe(\r\n      () => {\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n    this.router.navigateByUrl('dashboard');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActionType } from 'src/app/redux/action-type';\r\nimport { store } from 'src/app/redux/store';\r\nimport { CartItemModel } from 'src/app/models/Cart-Item-model';\r\nimport { CartModel } from 'src/app/models/Cart-model';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styles: [],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public user = new AuthModel();\r\n  public upUser = new AuthModel();\r\n\r\n  public cart = new CartModel();\r\n  public userCart = [];\r\n\r\n  public loginForm = this.user;\r\n  public ErrorMessage = '';\r\n  public valid: Boolean = false;\r\n  constructor(\r\n    private cartService: CartService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    store.subscribe(() => {\r\n      this.upUser = store.getState().user;\r\n    });\r\n\r\n    // * RE-login user to avoid LOGOUT after refresh :\r\n    this.upUser = store.getState().user;\r\n    if (localStorage.token) {\r\n      this.authService.liveUser().subscribe(\r\n        (res) => {\r\n          if (res.name === 'JsonWebTokenError') {\r\n            return;\r\n          }\r\n          const action = {\r\n            type: ActionType.userLogin,\r\n            payload: res.user,\r\n          };\r\n          store.dispatch(action);\r\n        },\r\n        (err) => alert(err.message)\r\n      );\r\n    }\r\n  }\r\n\r\n  public login(): void {\r\n    if (!this.loginForm.username_email || !this.loginForm.password) {\r\n      this.ErrorMessage = 'a field is missing- try again';\r\n      return;\r\n    }\r\n    this.authService.loginUser(this.loginForm).subscribe(\r\n      (res) => {\r\n        if (!res.user) {\r\n          alert('Wrong email / password .');\r\n          return;\r\n        }\r\n        this.ErrorMessage = '';\r\n        this.valid = !this.valid;\r\n        const action = {\r\n          type: ActionType.userLogin,\r\n          payload: res.user,\r\n        };\r\n        store.dispatch(action);\r\n        localStorage.setItem('token', res.jwtToken); // cookie?\r\n        if (res.user) {\r\n          this.checkForCart(res.user);\r\n        }\r\n        if (res.user.isAdmin) {\r\n          this.router.navigateByUrl('/dashboard');\r\n        }\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n\r\n  public checkForCart(user) {\r\n    this.cartService.findCart(user.userID).subscribe(\r\n      (res) => {\r\n        this.userCart[0] = res[0];\r\n      },\r\n      () => this.makeNewCart(user.userID)\r\n    ); // a bit hackey but solid ,maybe: try catch next time?\r\n  }\r\n\r\n  public makeNewCart(userID) {\r\n    // new cart is born, no further action needed.\r\n    this.cartService.makeCart(userID).subscribe(\r\n      () => {},\r\n      (err) => err.message\r\n    );\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Enter your email</mat-label>\r\n      <input\r\n        matInput\r\n        placeholder=\"pat@example.com\"\r\n        name=\"username_email\"\r\n        id=\"username_email_login\"\r\n        [(ngModel)]=\"user.username_email\"\r\n        minlength=\"7\"\r\n        required\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"container\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Enter your password</mat-label>\r\n      <input\r\n        matInput\r\n        placeholder=\"choose password\"\r\n        name=\"password\"\r\n        id=\"password_login\"\r\n        [(ngModel)]=\"user.password\"\r\n        #passwordIn=\"ngModel\"\r\n        minlength=\"3\"\r\n        required\r\n      />\r\n      <mat-error *ngIf=\"passwordIn.errors?.minlength && passwordIn.touched\"\r\n        >Password is too short...</mat-error\r\n      >\r\n    </mat-form-field>\r\n  </div>\r\n  <div id=\"loginMessage\" *ngIf=\"!valid\">{{ ErrorMessage }}</div>\r\n  <button type=\"button\" mat-raised-button color=\"basic\" (click)=\"login()\">\r\n    Sign In\r\n  </button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-receipt',\r\n  templateUrl: './receipt.component.html',\r\n  styles: [],\r\n})\r\nexport class ReceiptComponent  {\r\n\r\n}\r\n","<p>receipt works!</p>\r\nDownload text file (never got to it, yet...)\r\n","<mat-horizontal-stepper linear #stepper>\r\n  <mat-step>\r\n    <form name=\"first\" id=\"first\">\r\n      <ng-template matStepLabel\r\n        >Create account : Check id and email</ng-template\r\n      >\r\n      <mat-form-field>\r\n        <mat-label>Identification</mat-label>\r\n        <input\r\n          matInput\r\n          name=\"id\"\r\n          #idIn=\"ngModel\"\r\n          minlength=\"8\"\r\n          [(ngModel)]=\"addUser.id\"\r\n          placeholder=\"Identification\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"idIn\">\r\n          8-9 numbers Identification is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          matInput\r\n          #emailIn=\"ngModel\"\r\n          minlength=\"4\"\r\n          placeholder=\"Ex. pat@example.com\"\r\n          name=\"username_email\"\r\n          [(ngModel)]=\"addUser.username_email\"\r\n          required\r\n        />\r\n        <mat-hint>Your Email as your User Name</mat-hint>\r\n        <mat-error *ngIf=\"emailIn\">\r\n          Please enter a valid email address\r\n        </mat-error>\r\n        <mat-error *ngIf=\"emailIn.touched && emailIn.invalid\"\r\n          >{{ errorMessages.email }} Email is\r\n          <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field>\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value=\"94043\"\r\n          #passIn\r\n          #passIn=\"ngModel\"\r\n          minlength=\"3\"\r\n          [(ngModel)]=\"addUser.password\"\r\n          placeholder=\"Choose password\"\r\n          required\r\n        />\r\n        <mat-hint align=\"end\">{{ passIn.value.length }} / 3</mat-hint>\r\n        <mat-error *ngIf=\"passIn\">is too short </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field>\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          name=\"conf_password\"\r\n          #confPassIn=\"ngModel\"\r\n          minlength=\"3\"\r\n          [(ngModel)]=\"confPass\"\r\n          placeholder=\"Confirm password\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"passIn\"> passwords Do not match </mat-error>\r\n        <mat-error\r\n          *ngIf=\"confPassIn.touched && confPassIn.value !== passIn.value\"\r\n          >{{ errorMessages }} passwords Do not match\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <div>\r\n        <mat-error *ngIf=\"!validated1\">{{ errorBox }} </mat-error>\r\n        <button\r\n          mat-stroked-button\r\n          [disabled]=\"validated1\"\r\n          (click)=\"checkUser()\"\r\n        >\r\n          Check Availability\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          color=\"accent\"\r\n          matStepperNext\r\n          *ngIf=\"validated1\"\r\n          [disabled]=\"!validated1\"\r\n        >\r\n          Good to go, proceed <i class=\"material-icons\">arrow_right_alt </i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step *ngIf=\"validated1\">\r\n    <form novalidate>\r\n      <ng-template matStepLabel>Supply Account info</ng-template>\r\n      <mat-form-field>\r\n        <mat-label>Enter your First Name</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"John\"\r\n          name=\"firstName\"\r\n          #fNameIn=\"ngModel\"\r\n          minlength=\"2\"\r\n          [(ngModel)]=\"addUser.firstName\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"fNameIn\">your First Name is too short </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Enter your Last Name</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Doe\"\r\n          name=\"lastName\"\r\n          #lNameIn=\"ngModel\"\r\n          minlength=\"2\"\r\n          [(ngModel)]=\"addUser.lastName\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"lNameIn\">your Last Name is too short </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field>\r\n        <mat-label>Address</mat-label>\r\n        <textarea\r\n          matInput\r\n          placeholder=\"Ex. 1 Main St, New York, NY\"\r\n          name=\"address\"\r\n          #streetIn=\"ngModel\"\r\n          minlength=\"3\"\r\n          [(ngModel)]=\"addUser.street\"\r\n          required\r\n        ></textarea>\r\n        <mat-error *ngIf=\"streetIn\"\r\n          >your street address is too short\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Nearest City:</mat-label>\r\n        <mat-select\r\n          #cityIn=\"ngModel\"\r\n          [(ngModel)]=\"addUser.city\"\r\n          name=\"city\"\r\n          required\r\n        >\r\n          <mat-option *ngFor=\"let c of cities\" [value]=\"c\">\r\n            {{ c }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"cityIn\">please Choose a city from the list</mat-error>\r\n      </mat-form-field>\r\n\r\n      <div>\r\n        <button mat-button matStepperPrevious>\r\n          <i class=\"material-icons\">arrow_left_alt </i> Back\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"signUp()\">\r\n          Sign Me Up <i class=\"material-icons\">arrow_right_alt </i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styles: [],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public user = new AuthModel();\r\n  public addUser = {\r\n    id: '',\r\n    username_email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    street: '',\r\n    city: '',\r\n  };\r\n  public confPass = '';\r\n  public validated0 = false;\r\n  public validated1 = false;\r\n  public errorBox = '';\r\n\r\n  public errorMessages = {\r\n    id: 'make sure to fill ID',\r\n    idTaken: 'ID already exists',\r\n    email: 'make sure to fill Email',\r\n    emailTaken: 'Email already exists',\r\n    passwords: 'make sure to fill password',\r\n  };\r\n  public cities = [\r\n    'Metula',\r\n    'Haifa',\r\n    'Hadera',\r\n    'Pardes-Hanna',\r\n    'Byniamina',\r\n    'Zichron',\r\n    'Hertzelia',\r\n    'Tel-Aviv',\r\n    'Jerusalem',\r\n    'Beer-Sheva',\r\n    'Eilat',\r\n  ];\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n  public checkValid() {\r\n    if (!this.addUser.id || this.addUser.id.length < 7) {\r\n      this.errorBox = this.errorMessages.id;\r\n      return false;\r\n    }\r\n    if (!this.addUser.username_email) {\r\n      this.errorBox = this.errorMessages.email;\r\n      return false;\r\n    }\r\n    if (!this.addUser.password || this.addUser.password.length < 2) {\r\n      this.errorBox = this.errorMessages.passwords;\r\n      return false;\r\n    }\r\n    if (this.addUser.password != this.confPass) {\r\n      this.errorBox = 'passwords do not match!';\r\n      return (this.validated0 = false);\r\n    } else {\r\n      this.validated0 = true;\r\n    }\r\n  }\r\n  public async checkUser() {\r\n    this.checkValid();\r\n    if (!this.validated0) {\r\n      this.errorBox = '';\r\n      return;\r\n    }\r\n    await this.authService.checkUser(this.addUser).subscribe(\r\n      (res) => {\r\n        alert(res.message);\r\n        if (res.user) {\r\n          this.validated1 = true;\r\n          return;\r\n        }\r\n\r\n        this.validated1 = false;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n\r\n  public signUp() {\r\n    this.authService.regUser(this.addUser).subscribe(\r\n      () => {\r\n        const liveForm = {\r\n          username_email: this.addUser.username_email,\r\n          password: this.addUser.password,\r\n        };\r\n        this.liveLogin(liveForm);\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n  // need to delay response here, user does not auto- connect\r\n  public liveLogin(liveForm) {\r\n    this.authService.loginUser(liveForm).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/');\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n}\r\n","<mat-form-field appearance=\"fill\">\r\n  <input\r\n    matInput\r\n    placeholder=\"Search Item\"\r\n    name=\"term\"\r\n    id=\"term\"\r\n    [(ngModel)]=\"searchTerm\"\r\n    minlength=\"1\"\r\n    required\r\n  />\r\n  <button\r\n    mat-button\r\n    matSuffix\r\n    mat-icon-button\r\n    id=\"searchbut\"\r\n    aria-label=\"Search\"\r\n    (click)=\"search(searchTerm)\"\r\n  >\r\n    <i class=\"material-icons\">search </i>\r\n  </button>\r\n</mat-form-field>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h4 *ngIf=\"cartBox\">{{ cartBox }}</h4>\r\n    <table>\r\n      <thead>\r\n        <td>item name</td>\r\n        <!-- <td>image</td> -->\r\n        <td>catalogue #</td>\r\n        <td>quantity</td>\r\n        <td>total</td>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let c of userCartItems\">\r\n          <!-- <td *ngIf=\"c.imageUrl\"> <img mat-card-image src=\"../../../../assets/images/{{ c.imageUrl }}\" alt=\" {{ c.imageUrl }}\"\r\n            style=\"max-width:10%;\"></td> -->\r\n          <td>{{ c.itemName }}</td>\r\n          <td>{{ c.productID }}</td>\r\n          <td>{{ c.amount }}</td>\r\n          <td>{{ c.totalPrice }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <section class=\"bottom-cart row\">\r\n      <h5 class=\"col\">SubTotal : {{ totalPrice }}</h5>\r\n    </section>\r\n  </div>\r\n  <div class=\"col\">\r\n    <h3>Shipping details:</h3>\r\n    <form>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>City:</mat-label>\r\n        <mat-select\r\n          #cityIn=\"ngModel\"\r\n          [(ngModel)]=\"orderForm.shippingCity\"\r\n          name=\"city\"\r\n          required\r\n        >\r\n          <mat-option *ngFor=\"let c of cities\" [value]=\"c\">\r\n            {{ c }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"cityIn\">please Choose a city from the list</mat-error>\r\n        <br />\r\n        <br />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Street</mat-label>\r\n        <textarea\r\n          matInput\r\n          placeholder=\"Ex. 1 Main St, New York, NY\"\r\n          name=\"shippingStreet\"\r\n          #streetIn=\"ngModel\"\r\n          minlength=\"3\"\r\n          [(ngModel)]=\"orderForm.shippingStreet\"\r\n          required\r\n        ></textarea>\r\n        <mat-error *ngIf=\"streetIn\"\r\n          >your street address is too short\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <br />\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Choose a shipping date</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          matInput\r\n          [matDatepicker]=\"picker\"\r\n          name=\"shippingDate\"\r\n          [(ngModel)]=\"orderForm.shippingDate\"\r\n        />\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker [dateClass]=\"dateClass\" #picker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n      <br />\r\n      <h3>Payments:</h3>\r\n\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Credit Card - last 4 digits</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          name=\"paymentDigits\"\r\n          #paymentDigitsIn=\"ngModel\"\r\n          minlength=\"4\"\r\n          [(ngModel)]=\"orderForm.paymentDigits\"\r\n          placeholder=\"credit card last 4 digits\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"paymentDigitsIn\"\r\n          >your street address is too short\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br />\r\n      <button mat-raised-button color=\"primary\" (click)=\"completeOrder()\">\r\n        Complete Order <i class=\"material-icons\">face </i>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Router } from '@angular/router';\r\nimport { store } from 'src/app/redux/store';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { OrderModel } from 'src/app/models/Order-model';\r\nimport { MatCalendarCellCssClasses } from '@angular/material/datepicker';\r\nimport { OrderService } from 'src/app/services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.css'],\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  public user = new AuthModel();\r\n  public userID = 0;\r\n  public userCart = [];\r\n  public userCartItems = [];\r\n  public calendar = [1, 3, 15];\r\n  public cartBox = '';\r\n  public totalPrice = 0;\r\n  public order = new OrderModel();\r\n  public orders = [];\r\n  public occupiedDates = [];\r\n  public orderForm = this.order;\r\n  public searchTerm = [];\r\n  public cities = [\r\n    'Metula',\r\n    'Haifa',\r\n    'Hadera',\r\n    'Pardes-Hanna',\r\n    'Byniamina',\r\n    'Zichron',\r\n    'Hertzelia',\r\n    'Tel-Aviv',\r\n    'Jerusalem',\r\n    'Beer-Sheva',\r\n    'Eilat',\r\n  ];\r\n  constructor(\r\n    private userService: AuthService,\r\n    private orderService: OrderService,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) {}\r\n  dateClass = (d: Date): MatCalendarCellCssClasses => {\r\n    const date = d.getDate();\r\n    const newDate = this.occupiedDates.toLocaleString();\r\n    return this.occupiedDates.map((date) =>\r\n      newDate === date ? 'occupied-date-class' : ''\r\n    );\r\n  };\r\n  ngOnInit() {\r\n    store.subscribe(() => {\r\n      this.user = store.getState().user; // * -user ready - get active cart:\r\n      if (this.user && !this.user.isAdmin) {\r\n        this.userID = +this.user.userID;\r\n        this.fetchCart(this.user.userID);\r\n      }\r\n      this.userCart = store.getState().cartItems;\r\n    });\r\n    this.userCart = store.getState().cartItems;\r\n\r\n    // * fetch Orders load into store -seems to be a pickle here\r\n    this.fetchAllOrder();\r\n  }\r\n\r\n  public async fetchCart(id) {\r\n    await this.cartService.findCart(id).subscribe(\r\n      (res) => {\r\n        this.userCart[0] = res[0];\r\n        this.fetchCartItems(res[0].cartID);\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n  public async fetchCartItems(id) {\r\n    await this.cartService.fetchItems(id).subscribe(\r\n      (res) => {\r\n        this.userCartItems = res;\r\n        this.sumTotalPrice(res);\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n\r\n  public sumTotalPrice(cart) {\r\n    let sum = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      sum += cart[i].totalPrice;\r\n    }\r\n    this.totalPrice = sum;\r\n  }\r\n  public search(searchTerm): void {\r\n    this.userCartItems.map((p) => document.getElementById(p.name));\r\n    if (this.searchTerm.length === 0) {\r\n      return;\r\n    }\r\n    let tmpArr = [];\r\n    this.userCartItems.map((p) => {});\r\n  }\r\n\r\n  public completeOrder() {\r\n    if (\r\n      !this.orderForm.paymentDigits ||\r\n      !this.orderForm.shippingDate ||\r\n      !this.orderForm.shippingCity\r\n    ) {\r\n      return alert('one of the fields is empty, make sure to fill out all..');\r\n    }\r\n\r\n    const year = this.orderForm.shippingDate.getFullYear();\r\n    const month = this.orderForm.shippingDate.getMonth() + 1;\r\n    const day = this.orderForm.shippingDate.getDate();\r\n    const hours = this.orderForm.shippingDate.getHours();\r\n    const minutes = this.orderForm.shippingDate.getMinutes();\r\n    const seconds = this.orderForm.shippingDate.getSeconds();\r\n    const shipTime = `${year}-${month}-${day}:${hours}:${minutes}:${seconds}`;\r\n\r\n    this.orderForm.cartID = this.userCart[0].cartID;\r\n    this.orderForm.clientID = this.userID;\r\n    this.orderForm.subTotal = +this.totalPrice;\r\n    this.orderService.addOrder(this.orderForm, shipTime).subscribe(\r\n      (res) => {\r\n        alert('you have successfully purchased the items,' + res);\r\n        this.makeCart();\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n\r\n  public makeCart() {\r\n    // keeping old cart for billing purposes- but could also archive or delete it... and **{items}**...\r\n    this.cartService.makeCart(this.userID).subscribe(\r\n      () => {},\r\n      (err) => err.message\r\n    );\r\n  }\r\n\r\n  public fetchAllOrder() {\r\n    this.orderService.getAllorders().subscribe(\r\n      (res) => {\r\n        for (let i = 0; i < res.length; i++) {\r\n          this.occupiedDates.push(res[i].shippingDate);\r\n        }\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n    this.orders = store.getState().orders;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.css'],\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<h1>Wellcome to Web Store Services...</h1>\r\n<h3>\r\n  We are a boutique studio, offering a wide range of premium web products.<br />\r\n  all of our assets are handcrafted, digitally signed and 100% original.\r\n</h3>\r\n<h4>\r\n  the one stop shop- custom design at an affordable price: for your web-site,\r\n  right here, from this very web shop...\r\n</h4>\r\n<h5>\r\n  to view our catalogue - you must register and login... so go right ahead:\r\n</h5>\r\n\r\n<button type=\"button\" mat-raised-button color=\"accent\" routerLink=\"/register\">\r\n  <i class=\"material-icons\">face</i> Create an Account\r\n</button>\r\n<br /><br />\r\n<mat-grid-list cols=\"2\" rowHeight=\"300px\">\r\n  <mat-grid-tile>\r\n    <img src=\"assets/images/pexels-photo-4050299.jpeg\" alt=\" Nice seeing ya!\" />\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <img\r\n      src=\"assets/images/pencil-typography-black-design.jpg\"\r\n      alt=\" Nice seeing ya!\"\r\n    />\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <img src=\"assets/images/home.jpg\" alt=\" Nice seeing ya!\" />\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <img\r\n      src=\"assets/images/hands-people-woman-working.jpg\"\r\n      alt=\" Nice seeing ya!\"\r\n    />\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { store } from 'src/app/redux/store';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartModel } from 'src/app/models/Cart-model';\r\nimport { ActionType } from 'src/app/redux/action-type';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\n\r\n@Component({\r\n  selector: 'app-item',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.css'],\r\n})\r\nexport class ItemComponent implements OnInit {\r\n  public user = new AuthModel();\r\n  public product = new ProductModel();\r\n  public productID?: Number;\r\n  public name: String = '';\r\n  public price: Number = 0;\r\n  public imageUrl: String = '';\r\n  public itemDescription: String = '';\r\n  public catID: String = '';\r\n  public newCart: CartModel = new CartModel();\r\n  public userCart = [];\r\n  public userCartItems = [];\r\n  public addItem = {\r\n    amount: 1,\r\n    productID: '',\r\n    cartId: 0,\r\n  };\r\n\r\n  constructor(\r\n    private myActivatedRoute: ActivatedRoute,\r\n    private shopService: ShopService,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) {}\r\n  async ngOnInit() {\r\n    try {\r\n      const id = +this.myActivatedRoute.snapshot.params.id;\r\n      store.subscribe(() => {\r\n        this.user = store.getState().user;\r\n        this.userCart = store.getState().cart;\r\n        if (this.user) {\r\n          this.fetchCart(this.user.userID);\r\n        }\r\n      });\r\n      this.userCart = store.getState().cart;\r\n      this.user = store.getState().user;\r\n\r\n      // * Fetch this item details:\r\n      this.product = await this.shopService.getOneProductAsync(id);\r\n      this.productID = this.product[0].productID;\r\n      this.name = this.product[0].itemName;\r\n      this.price = this.product[0].price;\r\n      this.imageUrl = this.product[0].imageUrl;\r\n      this.itemDescription = this.product[0].itemDescription;\r\n      this.catID = this.product[0].catID;\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  public addToCart(productID) {\r\n      if(!this.userCart[0].cartID){alert(\"reload the page\");  window.location.reload();}\r\n    this.fetchCart(this.user.userID);\r\n    this.addItem.cartId = +this.userCart[0].cartID;\r\n    this.addItem.productID = productID;\r\n    this.cartService.addItemToCart(this.addItem, this.addItem.cartId).subscribe(\r\n      (res) => {\r\n        const action = {\r\n          type: ActionType.addItemCart,\r\n          payload: res,\r\n        };\r\n        store.dispatch(action);\r\n        alert('item has been added, Thank you');\r\n        this.router.navigateByUrl('/shop');\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n  public fetchCart(id) {\r\n    this.cartService.findCart(id).subscribe(\r\n      (res) => {\r\n        this.userCart[0] = res[0];\r\n      },\r\n      (err) => err.message\r\n    );\r\n  }\r\n}\r\n","<mat-card class=\"card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"header-image\">\r\n      <i class=\"material-icons\">local_offer</i>\r\n    </div>\r\n    <mat-card-title>{{ name }}</mat-card-title>\r\n    <mat-card-subtitle>Price: {{ price }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <!-- <div *ngIf=\"imageUrl\">\r\n\r\n    <img mat-card-image src=\"../../../../assets/images/{{ imageUrl }}\" alt=\" {{ imageUrl }}\">\r\n  </div> -->\r\n  <mat-card-content>\r\n    Description:\r\n    <p>{{ itemDescription }}</p>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <form class=\"row\" novalidate=\"novalidate\">\r\n      <mat-form-field appearance=\"fill\" color=\"accent\" class=\"col\">\r\n        <mat-label>Desired Amount</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          placeholder=\"1\"\r\n          value=\"1\"\r\n          #amountIn=\"ngModel\"\r\n          [(ngModel)]=\"addItem.amount\"\r\n          name=\"amount\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <button\r\n        type=\"submit\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        color=\"accent\"\r\n        class=\"col\"\r\n        value=\"Add\"\r\n        (click)=\"addToCart(productID)\"\r\n      >\r\n        <i class=\"material-icons\">local_grocery_store</i> Add To Cart\r\n      </button>\r\n    </form>\r\n    <a mat-raised-button routerLink=\"/shop\">Back to Shop </a>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styles: [],\r\n})\r\nexport class PageNotFoundComponent  {\r\n \r\n}\r\n","<p>page-not-found works!</p>\r\nor does it (:)\r\n","<mat-card class=\"card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"header-image\">\r\n      <i class=\"material-icons\">local_offer</i>\r\n    </div>\r\n    <mat-card-title>{{ name }}</mat-card-title>\r\n    <mat-card-subtitle>Price: {{ price }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img\r\n    mat-card-image\r\n    *ngIf=\"imageUrl\"\r\n    src=\"../../../../assets/images/{{ imageUrl }}\"\r\n    alt=\" {{ imageUrl }}\"\r\n  />\r\n  <mat-card-content>\r\n    Description:\r\n    <p>{{ itemDescription }}</p>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <form class=\"row\" novalidate=\"novalidate\">\r\n      <mat-form-field appearance=\"fill\" color=\"accent\" class=\"col\">\r\n        <mat-label>Desired Amount</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          placeholder=\"1\"\r\n          value=\"1\"\r\n          #amountIn=\"ngModel\"\r\n          [(ngModel)]=\"addItem.amount\"\r\n          name=\"amount\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <button\r\n        type=\"submit\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        color=\"accent\"\r\n        class=\"col\"\r\n        value=\"Add\"\r\n        (click)=\"addToCart(productID)\"\r\n      >\r\n        <i class=\"material-icons\">local_grocery_store</i> Add To Cart\r\n      </button>\r\n    </form>\r\n    <a mat-raised-button routerLink=\"/shop\">Back to Shop </a>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { CartModel } from 'src/app/models/Cart-model';\r\nimport { CartItemModel } from 'src/app/models/Cart-Item-model';\r\nimport { store } from 'src/app/redux/store';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pop-up',\r\n  templateUrl: './pop-up.component.html',\r\n  styles: [],\r\n})\r\nexport class PopUpComponent implements OnInit {\r\n  public product = new ProductModel();\r\n  public productID?: Number;\r\n  public name: String = '';\r\n  public price: Number = 0;\r\n  public imageUrl: String = '';\r\n  public itemDescription: String = '';\r\n  public catID: String = '';\r\n  public addItem = {\r\n    amount: 1,\r\n    productID: '',\r\n    cartId: 0,\r\n  };\r\n\r\n  public newCart: CartModel = new CartModel();\r\n  public cart: CartModel[] = []; // try to init cart here before add to cart....\r\n  public getCart: CartItemModel[] = [];\r\n\r\n  constructor(\r\n    private shopService: ShopService,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      const id = +this.productID;\r\n      store.subscribe(() => {\r\n        this.getCart = store.getState().cartItems;\r\n      });\r\n      this.getCart = store.getState().cartItems;\r\n\r\n      // * Fetch this item details:\r\n      this.product = await this.shopService.getOneProductAsync(id);\r\n      this.productID = this.product[0].productID;\r\n      this.name = this.product[0].itemName;\r\n      this.price = this.product[0].price;\r\n      this.imageUrl = this.product[0].imageUrl;\r\n      this.itemDescription = this.product[0].itemDescription;\r\n      this.catID = this.product[0].catID;\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  public addToCart(id) {\r\n    this.addItem.cartId = +this.getCart[0].cartID;\r\n\r\n    this.addItem.productID = id;\r\n    this.cartService.addItemToCart(this.addItem, this.addItem.cartId).subscribe(\r\n      (res) => {\r\n        alert('item has been added, Thank you');\r\n        window.location.reload();\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ProductModel } from 'src/app/models/Products-model';\r\nimport { Router } from '@angular/router';\r\nimport { store } from 'src/app/redux/store';\r\nimport { AuthModel } from 'src/app/models/Auth-model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { PopUpComponent } from '../pop-up/pop-up.component';\r\nimport { ItemComponent } from '../item/item.component';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.css'],\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  public products: ProductModel[] = [];\r\n  public user = new AuthModel(); // kick out un-logged users\r\n\r\n  public activeProducts = [];\r\n  public cats = [];\r\n  public searchTerm = { term: '' };\r\n\r\n  constructor(\r\n    private shopService: ShopService,\r\n    private router: Router,\r\n    public dialog: MatDialog // , public dialog_ref: MatDialogRef< PopUpComponent >,\r\n  ) // @Inject( MAT_DIALOG_DATA  ) public data?: number\r\n  {}\r\n\r\n  ngOnInit() {\r\n    store.subscribe(() => {\r\n      this.products = store.getState().products;\r\n    });\r\n    this.shopService.getAllcats().subscribe(\r\n      (res) => {\r\n        this.cats = res;\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n\r\n    this.products = store.getState().products;\r\n    this.activeProducts = this.products;\r\n\r\n    this.user = store.getState().user;\r\n\r\n    if (this.user === null) {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n  public filterItems(catid: Number) {\r\n    const selected = this.products.filter((product) => product.catID === catid);\r\n    this.activeProducts = selected;\r\n  }\r\n  public unFilterItems() {\r\n    this.activeProducts = this.products;\r\n  }\r\n  public search() {\r\n    this.activeProducts = this.products;\r\n    const selected = this.products.filter(\r\n      (product) => product.itemName === this.searchTerm.term\r\n    );\r\n    this.activeProducts = selected;\r\n  }\r\n}\r\n","<form>\r\n  <mat-form-field appearance=\"fill\">\r\n    <input\r\n      matInput\r\n      placeholder=\"Search Item\"\r\n      name=\"term\"\r\n      id=\"term\"\r\n      [(ngModel)]=\"searchTerm.term\"\r\n      minlength=\"1\"\r\n      required\r\n    />\r\n    <button\r\n      mat-button\r\n      matSuffix\r\n      mat-icon-button\r\n      id=\"searchbut\"\r\n      aria-label=\"Search\"\r\n      (click)=\"search()\"\r\n    >\r\n      <i class=\"material-icons\">search </i>\r\n    </button>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<a (click)=\"unFilterItems()\" class=\"nav-item\" mat-raised-button color=\"accent\"\r\n  >All Items</a\r\n>\r\n<a *ngFor=\"let c of cats\" class=\"nav-item\">\r\n  <a\r\n    type=\"button\"\r\n    filterItems=\"(c.catID)\"\r\n    mat-button\r\n    (click)=\"filterItems(c.catID)\"\r\n  >\r\n    {{ c.catName }}\r\n  </a>\r\n</a>\r\n<br />\r\n<br />\r\n<div class=\"row\">\r\n  <mat-card class=\"card col-4\" *ngFor=\"let p of activeProducts\">\r\n    <mat-card-header>\r\n      {{ p.catName }}\r\n      <mat-card-title>\r\n        <a routerLink=\"item/{{ p.productID }}\"\r\n          >{{ p.itemName }}\r\n        </a></mat-card-title\r\n      >\r\n      <mat-card-subtitle>Price: {{ p.price }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      Description:\r\n      <p>{{ p.itemDescription }}</p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <!-- <a mat-raised-button color=\"warn\" routerLink=\"item/{{ p.productID }}\" (click)=\"openDialog()\" > popup quantity </a> -->\r\n      <a mat-raised-button color=\"primary\" routerLink=\"item/{{ p.productID }}\">\r\n        View Full Details\r\n      </a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","export class AuthModel {\r\n  public constructor(\r\n    public userID?: 0,\r\n    public id?: Number,\r\n    public username_email?: String,\r\n    public firstName?: String,\r\n    public lastName?: String,\r\n    public password?: String,\r\n    public city?: String,\r\n    public street?: String,\r\n    public isAdmin?: String,\r\n    public firstVisit?: String\r\n  ) {}\r\n}\r\n\r\nexport class RegAuthModel extends AuthModel {\r\n  public constructor(\r\n    public userID?: 0,\r\n    public id?: Number,\r\n    public username_email?: String,\r\n    public firstName?: String,\r\n    public lastName?: String,\r\n    public password?: String,\r\n    public city?: String,\r\n    public street?: String,\r\n    public conf_password?: String\r\n  ) {\r\n    super(\r\n      userID,\r\n      id,\r\n      username_email,\r\n      firstName,\r\n      lastName,\r\n      password,\r\n      city,\r\n      street\r\n    );\r\n  }\r\n}\r\n","export class CartModel {\r\n  public constructor(\r\n    public cartID?: Number,\r\n    public userID?: Number,\r\n    public cartTime?: Date\r\n  ) {}\r\n}\r\n","export class OrderModel {\r\n  public constructor(\r\n    public clientID?: Number,\r\n    public cartID?: Number,\r\n    public orderId?: String,\r\n    public subTotal?: Number,\r\n    public shippingCity?: String,\r\n    public shippingStreet?: String,\r\n    public shippingDate?: Date,\r\n    public paymentDigits?: Number,\r\n    public orderTime?: Date\r\n  ) {}\r\n}\r\n","export class ProductModel {\r\n  public constructor(\r\n    public productID?: Number,\r\n    public catID?: Number,\r\n    public itemName?: String,\r\n    public itemDescription?: String,\r\n    public price?: Number,\r\n    public imageUrl?: string\r\n  ) {}\r\n}\r\n","export enum ActionType {\r\n  userLogin,\r\n  userLogout,\r\n  getUser,\r\n  getProducts,\r\n  getCats,\r\n  getCart,\r\n  getCartItems,\r\n  addItemCart,\r\n  getOrders,\r\n}\r\n","import { AuthModel } from '../models/Auth-model';\r\nimport { CartItemModel } from '../models/Cart-Item-model';\r\nimport { ProductModel } from '../models/Products-model';\r\nimport { CategoryModel } from '../models/Category-model';\r\nimport { CartModel } from '../models/Cart-model';\r\nimport { OrderModel } from '../models/Order-model';\r\n\r\nexport class AppState {\r\n  public user: AuthModel;\r\n  public products: ProductModel[];\r\n  public cart: CartModel[];\r\n  public cartItems: CartItemModel[];\r\n  public cats: CategoryModel[];\r\n  public orders: OrderModel[];\r\n\r\n  public constructor() {\r\n    this.user = null;\r\n    this.products = [];\r\n    this.cart = [];\r\n    this.cartItems = [];\r\n    this.orders = [];\r\n    this.cats = [];\r\n  }\r\n}\r\n","import { Action } from './action';\r\nimport { ActionType } from './action-type';\r\nimport { AppState } from './app-state';\r\n\r\nexport function reducer(oldAppState: AppState, action: Action): AppState {\r\n  const newAppState = {\r\n    ...oldAppState,\r\n  };\r\n\r\n  switch (action.type) {\r\n    case ActionType.userLogin:\r\n      newAppState.user = action.payload;\r\n      break;\r\n\r\n    case ActionType.userLogout:\r\n      newAppState.user = action.payload;\r\n      break;\r\n\r\n    case ActionType.getUser:\r\n      newAppState.user = action.payload;\r\n      break;\r\n    case ActionType.getProducts:\r\n      newAppState.products = action.payload;\r\n      break;\r\n    case ActionType.getCats:\r\n      newAppState.cats = action.payload;\r\n      break;\r\n    case ActionType.getCart:\r\n      newAppState.cart = action.payload;\r\n      break;\r\n    case ActionType.getCartItems:\r\n      newAppState.cartItems = action.payload;\r\n      break;\r\n    case ActionType.addItemCart:\r\n      newAppState.cartItems = action.payload;\r\n      break;\r\n    case ActionType.getOrders:\r\n      newAppState.orders = action.payload;\r\n      break;\r\n  }\r\n\r\n  return newAppState;\r\n}\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducer';\r\nimport { AppState } from './app-state';\r\n\r\nexport const store = createStore(reducer, new AppState());\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthModel } from '../models/Auth-model';\r\nimport { ProductModel } from '../models/Products-model';\r\n\r\nconst port = 3000;\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  public api = `https://angular.johnmogi.com/api/admin/`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public editItem(product: {}): Observable<any> {\r\n    return this.http.patch<AuthModel>(this.api + 'update-item', product);\r\n  }\r\n\r\n  public addImage(productForm: any) {\r\n    return this.http.post<any>(this.api + 'add-image', productForm);\r\n  }\r\n  public addItem(productForm: any) {\r\n    return this.http.post<any>(this.api + 'add-product', productForm);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthModel } from '../models/Auth-model';\r\n\r\nconst port = 3000;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  public api = `https://angular.johnmogi.com/api/auth/`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public checkUser(auth: {}): Observable<any> {\r\n    return this.http.post<AuthModel>(this.api + 'check-user', auth);\r\n  }\r\n\r\n  public regUser(auth: {}): Observable<any> {\r\n    return this.http.post<AuthModel>(this.api + 'register', auth);\r\n  }\r\n\r\n  public loginUser(sendInfo: object): Observable<any> {\r\n    // alert(JSON.stringify(sendInfo));\r\n    return this.http.post<any>(this.api + 'login', sendInfo);\r\n  }\r\n  public liveUser(): Observable<any> {\r\n    return this.http.get<any>(this.api + 'keep-user', {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      },\r\n    });\r\n  }\r\n  public logoutUser(): Observable<any> {\r\n    return this.http.post<any>(this.api + 'logout', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CartModel } from '../models/Cart-model';\r\nimport { CartItemModel } from '../models/Cart-Item-model';\r\n\r\nconst port = 3000;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CartService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public makeCart(userID: Number): Observable<CartModel[]> {\r\n    return this.http.post<CartModel[]>(\r\n      `https://angular.johnmogi.com/api/cart/new/${userID}`,\r\n      ''\r\n    );\r\n  }\r\n\r\n  public findCart(id: Number): Observable<CartModel[]> {\r\n    return this.http.get<CartModel[]>(\r\n      `https://angular.johnmogi.com/api/cart/user/${id}`\r\n    );\r\n  }\r\n  public fetchItems(num): Observable<CartItemModel[]> {\r\n    return this.http.get<CartItemModel[]>(\r\n      `https://angular.johnmogi.com/api/cart/history/${num}`\r\n    );\r\n  }\r\n  // add item to cart\r\n  public addItemToCart(\r\n    sendInfo: {},\r\n    cartID: Number\r\n  ): Observable<CartItemModel[]> {\r\n    return this.http.post<CartItemModel[]>(\r\n      `https://angular.johnmogi.com/api/cart/add-item/${cartID}`,\r\n      sendInfo\r\n    );\r\n  }\r\n  public removeItemFromCart(\r\n    productID: Number,\r\n    cartID: Number\r\n  ): Observable<CartItemModel[]> {\r\n    return this.http.delete<CartItemModel[]>(\r\n      `https://angular.johnmogi.com/api/cart/drop/${cartID}/${productID}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderModel } from '../models/Order-model';\r\nconst port = 3000;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderService {\r\n  public api = `https://angular.johnmogi.com/api/orders/`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getAllorders(): Observable<OrderModel[]> {\r\n    return this.http.get<OrderModel[]>(this.api);\r\n  }\r\n  public getOneOrderAsync(id: Number): Observable<OrderModel[]> {\r\n    return this.http.get<OrderModel[]>(this.api + 'item/' + id);\r\n  }\r\n  public getOneUserOrderAsync(userID: Number): Observable<OrderModel[]> {\r\n    return this.http.get<OrderModel[]>(this.api + 'user/' + userID);\r\n  }\r\n\r\n  public addOrder(orderForm: any, shipTime: String) {\r\n    return this.http.post<any>(this.api + 'new', {\r\n      form: orderForm,\r\n      shipTime: shipTime,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductModel } from '../models/Products-model';\r\nimport { CategoryModel } from '../models/Category-model';\r\nconst port = 3000;\r\n@Injectable({ providedIn: 'root' })\r\nexport class ShopService {\r\n  public api = `https://angular.johnmogi.com/api/products/`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getAllProducts(): Observable<ProductModel[]> {\r\n    return this.http.get<ProductModel[]>(this.api);\r\n  }\r\n  public getOneProductAsync(id: number): Promise<ProductModel> {\r\n    return this.http.get<ProductModel>(this.api + 'item/' + id).toPromise();\r\n  }\r\n  public getAllcats(): Observable<CategoryModel[]> {\r\n    return this.http.get<CategoryModel[]>(this.api + 'cats');\r\n  }\r\n\r\n  public addOneProductAsync(productForm: any): Observable<any> {\r\n    return this.http.post<any>(\r\n      this.api + 'add-product',\r\n      productForm\r\n      //  {headers: this.getHeaders()}\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}